<?php

/**
 * @file
 * Admin Customizations.
 */

use Drupal\Core\Field\FieldItemList;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Url;
use Drupal\group\Entity\Group;

/**
 * Implements hook_form_alter().
 */
function admin_customizations_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  switch ($form_id) {
    case 'file_image_edit_form':
    case 'file_document_edit_form':
      unset($form['uid'], $form['replace_upload']);
      break;

    case 'node_document_form':
    case 'node_document_edit_form':
      foreach (array_keys($form['actions']) as $action) {
        if (
          $action != 'preview' &&
          isset($form['actions'][$action]['#type']) &&
          $form['actions'][$action]['#type'] === 'submit'
        ) {
          $form['actions'][$action]['#submit'][] = 'admin_customizations_document_form_submit';
        }
      }
      break;
  }
}

/**
 * Implements hook_field_widget_form_alter().
 */
function admin_customizations_field_widget_form_alter(&$element, FormStateInterface $form_state, $context) {
  /* @var FieldItemList $items */
  $items = $context['items'];

  if (
    'field_node' === $items->getName() &&
    'paragraph' === $items->getEntity()->getEntityTypeId() &&
    'exist_content' === $items->getEntity()->getType()
  ) {
    /* @var Group $group */
    $group = \Drupal::routeMatch()->getParameter('group');

    if (!empty($group)) {
      array_unshift($element['target_id']['#selection_settings']['view']['arguments'], $group->id());
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function admin_customizations_preprocess_page(array &$variables) {
  $is_admin = \Drupal::service('router.admin_context')->isAdminRoute();

  if ($is_admin) {
    $variables['#attached']['library'][] = 'ample/admin-page';
  }
}

/**
 * Implements hook_entity_view_alter().
 */
function admin_customizations_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if (
    $entity->getEntityTypeId() === 'file' &&
    $entity->getMimeType() === 'image/svg+xml' &&
    isset($build['uri'])
  ) {
    $build['uri'][0]['#theme'] = 'image';
    unset($build['uri'][0]['#image_style']);
  }
}

/**
 * Submit handler.
 *
 * @see admin_customizations_form_alter()
 */
function admin_customizations_document_form_submit(array $form, FormStateInterface $form_state) {
  $form_state->setRedirectUrl(Url::fromRoute('system.admin_content'));
}
