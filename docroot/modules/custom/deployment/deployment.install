<?php

/**
 * @file
 * Contains deployment.install.
 */

use Drupal\Core\Database\Database;
use Drupal\Core\Database\Driver\mysql\Schema;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\field\Entity\FieldConfig;
use \Drupal\user\Entity\User;

/**
 * Install and configure contrib modules.
 */
function deployment_install() {
  deployment_update_8001();
  deployment_update_8002();
}

/**
 * Update configs in a directory.
 *
 * @param string $type
 *   The type of config directory to return. Drupal core provides the
 *   CONFIG_SYNC_DIRECTORY constant to access the sync directory.
 * @param string[] $configs
 *   A list of configs to update.
 * @param string[] $regexps
 *   Deprecated.
 */
function deployment_import_configs($type, array $configs, array $regexps = []) {
  /* @var $importer \Drupal\config_import\ConfigImporterService */
  $importer = Drupal::service('config_import.importer');
  // Set storage where configs located.
  $importer->setDirectory($type);
  // For new one configs.
  $importer->importConfigs($configs);
  $directory = $importer->getDirectory();

  // For override old one configs.
  foreach ($configs as $config) {
    Drupal::service('config_devel.auto_import_subscriber')->importOne("$directory/$config.yml");
  }
}

/**
 * Delete fields.
 *
 * @param string $entity_type
 *   Entity type ID.
 * @param string $bundle
 *   Bundle name.
 * @param array $fields
 *   List of field names.
 */
function deployment_delete_fields($entity_type, $bundle, array $fields) {
  foreach ($fields as $field_name) {
    $field = FieldConfig::loadByName($entity_type, $bundle, $field_name);

    if (NULL !== $field) {
      $field->delete();
    }
  }
}

/**
 * Install and configure contrib modules.
 */
function deployment_update_8001() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'ample.settings',
  ]);
}

/**
 * News.
 */
function deployment_update_8002() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'core.date_format.medium',
    'core.entity_form_display.node.news.default',
    'core.entity_view_display.node.news.default',
    'field.field.node.news.field_author',
    'image.style.538x359',
    'page_manager.page_variant.node_view-block_page_layout-0',
    'page_manager.page_variant.node_view-panels_variant-1',
    'page_manager.page_variant.node_view-panels_variant-3',
  ]);
}

/**
 * Update paragraph "Text" add permission and install "Stage file proxy".
 */
function deployment_update_8003() {
  Drupal::service('module_installer')->install(['stage_file_proxy']);

  deployment_delete_fields('node', 'basic_page', ['body']);

  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'core.entity_form_display.node.basic_page.default',
    'core.entity_form_display.paragraph.content_text.default',
    'core.entity_form_display.paragraph.content_text.with_title',
    'core.entity_form_mode.paragraph.with_title',
    'core.entity_view_display.node.basic_page.default',
    'core.entity_view_display.node.basic_page.teaser',
    'core.entity_view_display.paragraph.content_text.default',
    'field.field.node.basic_page.field_banner',
    'field.field.paragraph.content_image.field_content_image',
    'field.field.paragraph.content_text.field_content_text',
    'field.field.paragraph.content_text.field_title',
    'field.field.paragraph.custom_content.field_body',
    'field.storage.paragraph.field_content_text',
    'field.storage.paragraph.field_body',
    'stage_file_proxy.settings',
    'user.role.anonymous',
    'user.role.authenticated',
  ]);
}

/**
 * News.
 */
function deployment_update_8004() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'field.field.node.news.field_author',
    'core.entity_view_display.node.news.default',
    'core.entity_form_display.node.news.default',
    'page_manager.page_variant.node_view-panels_variant-0',
    'field.field.node.news.field_join_block',
    'field.field.node.news.field_content_paragraph',
    'core.date_format.medium',
    'core.date_format.time_line',
    'core.extension',
    'field.field.node.news.field_category',
    'field.field.node.news.field_organization',
    'field.storage.node.field_category',
    'field.storage.node.field_organization',
    'language.content_settings.taxonomy_term.categories',
    'language.content_settings.taxonomy_term.organizations',
    'taxonomy.vocabulary.categories',
    'taxonomy.vocabulary.organizations',
  ]);
}

/**
 * Member page.
 */
function deployment_update_8005() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'page_manager.page_variant.node_view-panels_variant-3',
    'page_manager.page_variant.who_page-panels_variant-0',
  ]);
}

/**
 * Add view mode "Time line" and new view mode for "Image" paragraph.
 */
function deployment_update_8006() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'core.entity_view_display.node.event.time_line',
    'core.entity_view_display.node.news.time_line',
    'core.entity_view_display.paragraph.exist_content.default',
    'core.entity_form_display.paragraph.content_image.default',
    'core.entity_view_display.node.basic_page.default',
    'core.entity_view_display.paragraph.content_image.view_mode_banner',
    'core.entity_view_display.paragraph.content_image.with_quote',
    'core.entity_view_mode.paragraph.with_quote',
    'core.entity_view_mode.node.time_line',
    'field.field.paragraph.content_image.field_view_mode',
    'field.field.paragraph.exist_content.field_content',
    'editor.editor.minimal',
    'filter.format.minimal',
  ]);
}

/**
 * Update Member list view.
 */
function deployment_update_8007() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'image.style.60x60',
    'views.view.members_list',
  ]);
}

/**
 * Update Member content type and Member page.
 */
function deployment_update_8008() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'field.field.node.member.field_join_block',
    'image.style.174x174',
    'core.entity_form_display.node.member.default',
    'core.entity_view_display.node.member.default',
    'field.field.node.member.field_member_image',
    'page_manager.page_variant.node_view-panels_variant-3',
  ]);
}

/**
 * Recent news block.
 */
function deployment_update_8009() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'block.block.views_block__recent_news_block_1',
    'core.entity_view_display.node.news.default',
    'core.entity_view_display.node.news.small_teaser',
    'core.entity_view_mode.node.small_teaser',
    'core.extension',
    'field.storage.group_content.group_roles',
    'image.style.65x65',
    'language.content_settings.node.news',
    'page_manager.page.page_why',
    'views.settings',
    'views.view.group_members',
    'views.view.group_nodes',
    'views.view.recent_news',
  ]);
}

/**
 * Update Who page.
 */
function deployment_update_8010() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'page_manager.page_variant.who_page-panels_variant-0',
    'views.view.members_list',
  ]);
}

/**
 * Fix Who page.
 */
function deployment_update_8011() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'views.view.members_list',
  ]);
}

/**
 * Event page and update event content type.
 */
function deployment_update_8012() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'field.field.node.event.field_category',
    'field.field.node.event.field_join_block',
    'field.field.node.event.field_organization',
    'core.entity_form_display.node.event.default',
    'core.entity_view_display.node.event.default',
    'field.field.node.event.field_date',
    'page_manager.page_variant.node_view-panels_variant-2',
  ]);
}

/**
 * Remove field collection "Time line" and add link to "Basic page".
 */
function deployment_update_8013() {
  deployment_delete_fields('node', 'basic_page', ['field_time_line']);

  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'core.entity_form_display.node.basic_page.default',
    'core.entity_form_display.node.news.default',
    'core.entity_form_display.paragraph.link.default',
    'core.entity_form_display.paragraph.time_line.default',
    'core.entity_view_display.node.basic_page.default',
    'core.entity_view_display.node.basic_page.teaser',
    'core.entity_view_display.node.basic_page.view_mode_for_section_page',
    'core.entity_view_display.node.news.default',
    'core.entity_view_display.paragraph.link.default',
    'core.entity_view_display.paragraph.time_line.default',
    'field.field.node.basic_page.field_bottom_link',
    'field.field.node.basic_page.field_time_line',
    'field.field.node.news.field_content_date',
    'field.field.paragraph.link.field_link',
    'field.field.paragraph.time_line.field_headline',
    'field.field.paragraph.time_line.field_time_line_item',
    'field.field.paragraph.time_line.field_title',
    'field.storage.node.field_bottom_link',
    'field.storage.node.field_content_date',
    'field.storage.node.field_time_line',
    'field.storage.paragraph.field_headline',
    'field.storage.paragraph.field_link',
    'field.storage.paragraph.field_time_line_item',
    'page_manager.page_variant.node_view-panels_variant-1',
    'paragraphs.paragraphs_type.link',
    'paragraphs.paragraphs_type.time_line',
  ]);
}

/**
 * Fix Event.
 */
function deployment_update_8014() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'block.block.logos',
    'block.block.logosstatic',
    'field.field.node.event.field_event_slider',
    'image.style.60x60',
    'core.entity_form_display.node.event.default',
    'core.entity_form_display.paragraph.content_image.simple_image',
    'core.entity_form_mode.paragraph.simple_image',
    'block_content.type.link',
    'core.entity_view_display.block_content.link.link',
    'core.entity_view_mode.block_content.link',
    'page_manager.page_variant.who_page-panels_variant-0',
  ]);
}

/**
 * Add custom formatter.
 */
function deployment_update_8015() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'core.extension',
    'views.view.members_list',
  ]);
}

/**
 * Sort time line.
 */
function deployment_update_8016() {
  Drupal::service('module_installer')->install(['timeline']);

  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'core.entity_form_display.paragraph.time_line.default',
    'core.entity_view_display.node.event.time_line',
    'core.entity_view_display.node.basic_page.teaser',
    'core.entity_view_display.node.news.default',
    'core.entity_view_display.node.news.time_line',
    'core.entity_view_display.paragraph.time_line.default',
    'core.entity_view_display.paragraph.custom_content.default',
    'core.extension',
    'field.field.paragraph.time_line.field_sort_by_date',
    'field.storage.paragraph.field_sort_by_date',
    'page_manager.page_variant.node_view-panels_variant-1',
  ]);
}

/**
 * Fix image style.
 */
function deployment_update_8017() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'image.style.174x174',
  ]);
}

/**
 * Recent events.
 */
function deployment_update_8018() {
  Drupal::service('module_installer')->install(['better_exposed_filters']);
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'ample.settings',
    'block.block.logos',
    'block.block.logos_2',
    'block.block.views_block__recent_news_block_2',
    'core.entity_form_display.paragraph.slider.banner',
    'core.entity_form_display.paragraph.slider.default',
    'core.entity_form_display.paragraph.slider_item.default',
    'core.entity_view_display.node.basic_page.teaser',
    'core.entity_view_display.node.basic_page.view_mode_for_section_page',
    'core.entity_view_display.node.event.small_teaser',
    'core.entity_view_display.paragraph.slider.default',
    'core.entity_view_display.paragraph.slider.small_teaser',
    'core.entity_view_display.paragraph.slider.view_mode_banner',
    'core.entity_view_display.paragraph.slider.view_mode_thumbnail',
    'core.entity_view_display.paragraph.slider_item.default',
    'core.entity_view_display.paragraph.slider_item.small_teaser',
    'core.entity_view_mode.paragraph.small_teaser',
    'field.field.node.news.field_content_paragraph',
    'field.field.paragraph.slider.field_slider',
    'field.field.paragraph.slider_item.field_content_image',
    'field.field.paragraph.slider_item.field_description',
    'field.storage.paragraph.field_slider',
    'page_manager.page_variant.node_view-panels_variant-2',
    'paragraphs.paragraphs_type.slider_item',
    'system.site',
    'views.view.group_members',
    'views.view.group_nodes',
    'views.view.recent_news',
  ]);
}

/**
 * Slider background.
 */
function deployment_update_8019() {
  Drupal::service('module_installer')->install(['image_url_formatter']);

  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'core.entity_view_display.paragraph.slider.default',
    'core.entity_view_display.paragraph.slider_item.default',
  ]);
}

/**
 * Install "File entity" and add image category.
 */
function deployment_update_8020() {
  Drupal::service('module_installer')->install(['file_entity', 'admin_customizations']);

  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'core.entity_form_display.file.image.default',
    'core.entity_view_display.file.audio.thumbnail',
    'core.entity_view_display.file.document.thumbnail',
    'core.entity_view_display.file.image.default',
    'core.entity_view_display.file.image.thumbnail',
    'core.entity_view_display.file.video.thumbnail',
    'core.entity_view_mode.block.token',
    'core.entity_view_mode.block_content.token',
    'core.entity_view_mode.comment.token',
    'core.entity_view_mode.contact_message.token',
    'core.entity_view_mode.file.thumbnail',
    'core.entity_view_mode.file.token',
    'core.entity_view_mode.group.token',
    'core.entity_view_mode.group_content.token',
    'core.entity_view_mode.menu_link_content.token',
    'core.entity_view_mode.node.token',
    'core.entity_view_mode.page_variant.token',
    'core.entity_view_mode.paragraph.token',
    'core.entity_view_mode.shortcut.token',
    'core.entity_view_mode.taxonomy_term.token',
    'core.entity_view_mode.user.token',
    'core.extension',
    'field.field.file.image.field_category',
    'field.field.file.image.field_image_alt_text',
    'field.field.file.image.field_image_title_text',
    'field.storage.file.field_category',
    'field.storage.file.field_image_alt_text',
    'field.storage.file.field_image_title_text',
    'file_entity.settings',
    'file_entity.type.audio',
    'file_entity.type.document',
    'file_entity.type.image',
    'file_entity.type.video',
    'language.content_settings.taxonomy_term.file_category',
    'system.action.file_delete_action',
    'system.action.file_permanent_action',
    'system.action.file_temporary_action',
    'taxonomy.vocabulary.file_category',
    'user.role.anonymous',
    'user.role.authenticated',
    'views.view.file_entity_browser',
    'views.view.file_entity_files',
    'views.view.files',
    'core.entity_form_display.file.document.default',
    'core.entity_view_display.file.document.default',
    'field.field.file.document.field_category',
  ]);

  \Drupal::database()->update('file_managed')->fields(['type' => 'image'])->execute();
}

/**
 * Slider gallery.
 */
function deployment_update_8021() {
  Drupal::service('module_installer')->install(['field_formater_render_twice']);

  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'core.entity_view_display.paragraph.slider.view_mode_thumbnail',
    'core.entity_view_display.paragraph.slider_item.view_mode_banner',
    'core.entity_view_display.paragraph.slider_item.view_mode_thumbnail',
  ]);
}

/**
 * Update Node page variant.
 */
function deployment_update_8022() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'page_manager.page_variant.node_view-panels_variant-1',
  ]);
}

/**
 * Fix Events and News language selector.
 */
function deployment_update_8023() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'language.content_settings.node.event',
    'language.content_settings.node.news',
    'core.entity_form_display.node.event.default',
    'core.entity_view_display.node.event.default',
  ]);
}

/**
 * Add link to paragraph "Custom content".
 */
function deployment_update_8024() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'core.entity_form_display.paragraph.custom_content.default',
    'core.entity_view_display.paragraph.custom_content.default',
    'field.field.paragraph.custom_content.field_link',
  ]);
}

/**
 * Fix social link field in "Social links" block.
 */
function deployment_update_8025() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'field.field.paragraph.member_icon.field_member_link',
    'views.view.members_list',
    'field.field.block_content.social_links.field_twitter',
    'field.field.block_content.social_links.field_linkedin',
    'field.field.block_content.social_links.field_facebook',
  ]);
}

/**
 * Remove field collection "Infographic item" and uninstall "Field collection".
 */
function deployment_update_8026() {
  deployment_delete_fields('paragraph', 'infographic', ['field_infographic_item']);
  field_purge_batch(500);

  \Drupal::database()->delete('field_collection_item')->execute();
  \Drupal::database()->delete('field_collection_item_revision')->execute();
  \Drupal::service('module_installer')->uninstall(['field_collection']);
  \Drupal::service('module_installer')->install(['linkit']);
}

/**
 * Install module "Country".
 */
function deployment_update_8027() {
  \Drupal::service('module_installer')->install(['country']);
}

/**
 * Install module "Geolocation".
 */
function deployment_update_8028() {
  \Drupal::service('module_installer')->install(['geolocation']);
}

/**
 * Delete field "Country icon".
 */
function deployment_update_8029() {
  deployment_delete_fields('paragraph', 'slider', ['field_country_icon']);
  deployment_delete_fields('paragraph', 'content_image', ['field_country_icon']);
  field_purge_batch(500);
}

/**
 * Install module "Custom public options".
 */
function deployment_update_8030() {
  \Drupal::service('module_installer')->install(['custom_pub']);
}

/**
 * Install module "Twig xDebug".
 */
function deployment_update_8031() {
  \Drupal::service('module_installer')->install(['twig_xdebug']);

}

/**
 * Install modules "REST", "Serialization" and  "Views GeoJSON".
 */
function deployment_update_8032() {
  \Drupal::service('module_installer')->install([
    'rest',
    'serialization',
    'views_geojson',
  ]);
}

/**
 * Install modules.
 */
function deployment_update_8033() {
  \Drupal::service('module_installer')->install([
    'group_dashboard',
    'admin_theme',
  ]);
}

/**
 * Install module "Views Default Arguments".
 */
function deployment_update_8034() {
  \Drupal::service('module_installer')->install(['views_default_arguments']);
}

/**
 * Remove image field.
 */
function deployment_update_8035() {
  deployment_delete_fields('node', 'social', ['field_image']);
  field_purge_batch(500);
}

/**
 * Enable Global Tag module.
 */
function deployment_update_8036() {
  // Lets this update here for backward compatibility,
  // the global tag module has been reverted.
}

/**
 * Install module "Block permissions".
 */
function deployment_update_8037() {
  \Drupal::service('module_installer')->install(['block_permissions']);
}

/**
 * Install module "Block permissions".
 */
function deployment_update_8038() {
  \Drupal::service('module_installer')->install(['group_customization']);
}

/**
 * Install module "Registration page".
 */
function deployment_update_8039() {
  \Drupal::service('module_installer')->install([
    'email_confirm',
    'form_mode_manager',
    'formblock',
    'social_login',
    'user_registration',
    'email_registration',
  ]);
}

/**
 * Add view "Content" to Groups admin page.
 */
function deployment_update_8040() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'views.view.content',
  ]);
}

/**
 * Install module "Entity legal".
 */
function deployment_update_8041() {
  \Drupal::service('module_installer')->install(['entity_legal']);
}

/**
 * Install module "Crop".
 */
function deployment_update_8042() {
  \Drupal::service('module_installer')->install(['crop', 'image_widget_crop']);
}

/**
 * Install module "Form alter service".
 */
function deployment_update_8043() {
  \Drupal::service('module_installer')->install(['form_alter_service']);
}

/**
 * Install module "Field validation".
 */
function deployment_update_8044() {
  \Drupal::service('module_installer')->install(['field_validation']);
}

/**
 * Install module "Block tabs".
 */
function deployment_update_8045() {
  \Drupal::service('module_installer')->install(['blocktabs']);
}

/**
 * Install module "Disable message".
 */
function deployment_update_8046() {
  \Drupal::service('module_installer')->install(['disable_messages']);
}

/**
 * Install module "Password policy".
 */
function deployment_update_8047() {
  \Drupal::service('module_installer')->install(['password_policy']);
}

/**
 * Install module "Views Field View".
 */
function deployment_update_8048() {
  \Drupal::service('module_installer')->install(['views_field_view']);
}

/**
 * Auto assign role to old memberships.
 */
function deployment_update_8049() {
  $select = db_select('group_content_field_data', 'gcfd');
  $select->leftJoin('group_content__group_roles', 'gcgr', 'gcfd.id = gcgr.entity_id');
  $select->condition('gcfd.type', [
    'country-group_membership',
    'project-group_membership',
    'region-group_membership',
  ], 'IN');
  $select->isNull('gcgr.group_roles_target_id');
  $select->addField('gcfd', 'type', 'bundle');
  $select->addField('gcfd', 'id', 'entity_id');
  $select->addField('gcfd', 'id', 'revision_id');
  $select->addExpression('\'en\'', 'langcode');
  $select->addExpression('\'0\'', 'delta');
  $select->addExpression('concat(substring_index(gcfd.type, \'-\', 1),\'-admin\')', 'group_roles_target_id');
  $db_insert = db_insert('group_content__group_roles');
  $db_insert->fields([
    'bundle',
    'entity_id',
    'revision_id',
    'langcode',
    'delta',
    'group_roles_target_id',
  ]);
  $db_insert->from($select);
  $db_insert->execute();
}

/**
 * Install module "group_following".
 */
function deployment_update_8050() {
  \Drupal::service('module_installer')->install(['group_following']);
}

/**
 * Remove old fields.
 */
function deployment_update_8051() {
  deployment_delete_fields('user', 'user', ['field_projects']);
  deployment_delete_fields('user', 'user', ['field_regions']);
  deployment_delete_fields('user', 'user', ['field_countries']);
  deployment_delete_fields('group', 'governance_area', ['field_date']);
  field_purge_batch(500);
}

/**
 * Remove old fields.
 */
function deployment_update_8052() {
  deployment_delete_fields('user', 'user', ['field_category']);
  field_purge_batch(500);
}

/**
 * Install module "EU Cookie Compliance".
 */
function deployment_update_8053() {
  \Drupal::service('module_installer')->install(['eu_cookie_compliance']);
}

/**
 * Install module "Friends".
 */
function deployment_update_8054() {
  \Drupal::service('module_installer')->install(['friends']);
}

/**
 * Remove field 'Country'.
 */
function deployment_update_8055() {
  deployment_delete_fields('user', 'user', ['field_country_text']);
  field_purge_batch(500);
}

/**
 * Install module "Hotjar".
 */
function deployment_update_8056() {
  \Drupal::service('module_installer')->install(['hotjar']);
}

/**
 * Install module "relation".
 */
function deployment_update_8057() {
  \Drupal::service('module_installer')->install(['relation']);
}

/**
 * Install modules "AJAX comments" and "Rate".
 */
function deployment_update_8058() {
  \Drupal::service('module_installer')->install(['ajax_comments', 'rate']);
}

/**
 * Install module "taxonomy_image_formatter".
 */
function deployment_update_8059() {
  \Drupal::service('module_installer')->install(['taxonomy_image_formatter']);
}

/**
 * Install module "menu_item_visibility_by_group".
 */
function deployment_update_8060() {
  \Drupal::service('module_installer')->install(['menu_item_visibility_by_group']);
}

/**
 * Install module "User access".
 */
function deployment_update_8061() {
  \Drupal::service('module_installer')->install(['user_access']);
}

/**
 * Install module "Tagadelic" and "KV".
 */
function deployment_update_8062() {
  \Drupal::service('module_installer')->install(['tagadelic', 'knowledge_vault']);
}

/**
 * Remove field 'Copyright text'.
 */
function deployment_update_8063() {
  deployment_delete_fields('block_content', 'member_icons', ['field_copyright_text']);
}

/**
 * Remove Time and Time text field.
 */
function deployment_update_8064() {
  deployment_delete_fields('node', 'event', ['field_time_text']);
  field_purge_batch(500);
}

/**
 * Remove "Related content selector" field.
 */
function deployment_update_8065() {
  deployment_delete_fields('node', 'article', ['field_related_content_selector']);
  field_purge_batch(500);
}

/**
 * Update filed "Computed date".
 */
function deployment_update_8071() {
  $connection = Database::getConnection();
  $database =  \Drupal::database();
  $node_computed_date = [];
  $group_computed_date = [];


  $node_computed_date = $database->select('node_field_data', 'node_field_data')
    ->fields('node_field_data', ['nid', 'computed_date'])
    ->execute()
    ->fetchAll();

  $database->update('node_field_data')
    ->fields(['computed_date' => NULL])
    ->execute();

  $group_computed_date = $database->select('groups_field_data', 'groups_field_data')
    ->fields('groups_field_data', ['id', 'computed_date'])
    ->execute()
    ->fetchAll();

  $database->update('groups_field_data')
    ->fields(['computed_date' => NULL])
    ->execute();

  \Drupal::entityDefinitionUpdateManager()->applyUpdates();

  foreach (['node_field_data', 'groups_field_data'] as $table) {
    $connection->schema()->changeField(
      $table,
      'computed_date',
      'computed_date',
      ['type' => 'int', 'size' => 'big']
    );
  }

  foreach ($node_computed_date as $node) {
    $database->update('node_field_data')
      ->fields(['computed_date' => $node->computed_date])
      ->condition('nid', $node->nid)
      ->execute();
  }

  foreach ($group_computed_date as $group) {
    $database->update('groups_field_data')
      ->fields(['computed_date' => $group->computed_date])
      ->condition('id', $group->id)
      ->execute();
  }
}

/**
 * Remove module "Fullcalendar" from table "key_value".
 */
function deployment_update_8072() {
  \Drupal::database()->delete('key_value')
    ->condition('collection', 'system.schema')
    ->condition('name', ['fullcalendar', 'fullcalendar_options'], 'IN')
    ->execute();
}

/**
 * Install module "Pathologic".
 */
function deployment_update_8073() {
  \Drupal::service('module_installer')->install(['pathologic']);
}

/**
 * Install module "wp_content".
 */
function deployment_update_8074() {
  \Drupal::service('module_installer')->install(['wp_content']);
}

/**
 * Return changes back.
 */
function deployment_update_8075() {
  // Use warm old style flow, feel so nostalgic.
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'core.date_format.time_line.yml',
    'views.view.my_calendar.yml',
  ]);
}

/**
 * Install module "ultimate_cron".
 */
function deployment_update_8076() {
  \Drupal::service('module_installer')->install(['ultimate_cron']);
}

/**
 * Update user role.
 */
function deployment_update_8078() {
  /**
   * UID 44: Helga Mahler
   * UID 52: Gwenael Dhaene
   */
  foreach ([44, 52] as $id) {
    /* @var User $user */
    $user = User::load($id);

    $user->removeRole('governance_group_users');
    $user->removeRole('coordination_desk_users');
    $user->addRole('co_admin');

    $user->save();
  }
}

/**
 * Install module "simplenews".
 */
function deployment_update_8079() {
  \Drupal::service('module_installer')->uninstall(['smtp']);
  \Drupal::service('module_installer')->install([
    'simplenews_scheduler',
    'simplenews',
    'action',
    'bricks',
    'bricks_inline',
    'inline_entity_form',
    'simplenews',
    'simplenews_customizations',
    'bricks_customizations',
  ]);
}

/**
 * Install module "piwik".
 */
function deployment_update_8080() {
  \Drupal::service('module_installer')->install(['piwik']);
}

/**
 * Disable migrate_wp.
 */
function deployment_update_8081() {
  \Drupal::service('module_installer')->uninstall(['migrate_wp']);
}

/**
 * Install module "SMTP" and "CDN".
 */
function deployment_update_8082() {
  \Drupal::service('module_installer')->install(['smtp', 'cdn', 'cdn_ui']);
}

/**
 * Install module "ImageMagick".
 */
function deployment_update_8083() {
  \Drupal::service('module_installer')->install(['imagemagick']);
}

/**
 * Auto Login Url enable.
 */
function deployment_update_8084() {
  \Drupal::service('module_installer')->install([
    'auto_login_url',
  ]);
}

/**
 * Change flood interval to 10 mins.
 */
function deployment_update_8085() {
  // 10 minutes.
  $flood_interval = 60 * 10;
  \Drupal::configFactory()->getEditable('user.flood')
    ->set('user_window', $flood_interval)
    ->save();
}

/**
 * Disable piwik, enable GA.
 */
function deployment_update_8086() {
  \Drupal::service('module_installer')->uninstall(['piwik']);
  \Drupal::service('module_installer')->install(['google_analytics']);
}

/**
 * Vimeo + Youtube
 */
function deployment_update_8087() {
  \Drupal::service('module_installer')->install([
      'video_embed_wysiwyg',
      'video_embed_field_background',
    ]);
}

/**
 * Email notification customizations.
 */
function deployment_update_8088() {
  // Remove custom notification customizations.
}

/**
 * Fix storage config.
 */
function deployment_update_8089() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'field.storage.node.field_is_conference',
    'field.storage.group.field_end_date',
    'field.storage.group.field_label_end_date',
    'field.storage.group.field_summary_content',
  ]);
}

/**
 * Fix inctances config.
 */
function deployment_update_8090() {
  deployment_import_configs(CONFIG_SYNC_DIRECTORY, [
    'field.field.node.event.field_is_conference',
    'field.field.group.country.field_summary_content',
    'field.field.group.project.field_end_date',
    'field.field.group.project.field_label_end_date',
  ]);
}
