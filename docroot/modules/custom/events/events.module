<?php

/**
 * @file
 * This is the Custom Events module.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Url;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Access\AccessResult;

/**
 * Implements hook_views_data_alter().
 */
function events_views_data_alter(array &$data) {
  if (isset($data['node'])) {
    // Add the current company computed field to Views.
    $data['node']['color'] = [
      'title' => t('Random color'),
      'field' => [
        'id' => 'events_random_color',
      ],
    ];
  }
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function events_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  $type = $entity->getType();
  $user = Drupal::currentUser();
  if ('event' == $type) {
    if ('default' == $view_mode && TRUE === $user->isAnonymous()) {
      $build['signup_link'] = [
        '#title' => new TranslatableMarkup('Sign up for event'),
        '#type' => 'link',
        '#url' => Url::fromRoute('user.login'),
        '#weight' => -10,
      ];
    }
    /** @var \Drupal\Core\Session\AccountInterface $account */
    $account = \Drupal::currentUser()->getAccount();
    /** @var \Drupal\menu_item_visibility_by_group\MenuItemVisibilityCheckByGroup $check_by_group */
    $check_by_group = \Drupal::service('menu_item_visibility_by_group.check_by_group');
    if ($check_by_group->check($account, ['governance_area'])) {
      $build['event_registrant'] = views_embed_view('event_sign_up', 'block_1', $entity->id());
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function events_node_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  /* @var \Drupal\node\Entity\Node $entity */
  $type = $entity->getType();
  if ('event' == $type) {
    /** @var \Drupal\Core\Session\AccountInterface $account */
    $account = \Drupal::currentUser()->getAccount();
    /** @var \Drupal\menu_item_visibility_by_group\MenuItemVisibilityCheckByGroup $check_by_group */
    $check_by_group = \Drupal::service('menu_item_visibility_by_group.check_by_group');
    if (!$check_by_group->check($account, ['governance_area'])) {
      $build['like_and_dislike']['#access'] = FALSE;
    }
  }
}

/**
 * Implements hook_entity_extra_field_info().
 */
function events_entity_extra_field_info() {
  $extra['node']['event']['form']['custom_date_widget'] = [
    'label' => t('Custom Date Widget'),
    'weight' => 0,
  ];
  $extra['node']['event']['display']['event_registrant'] = [
    'label' => t('Event Registrant'),
    'weight' => 0,
    'visible' => FALSE,
  ];
  return $extra;
}

/**
 * Implements hook_views_query_alter().
 */
function events_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  if (!in_array($view->id(), ['my_calendar'])) {
    return;
  }
  if ($view->current_display == 'block_1') {
    $query->where[2]['conditions'][0]['value'] = \Drupal::currentUser()->id();
  }
}

/**
 * Implements hook_views_post_build().
 */
function events_views_post_build(ViewExecutable $view) {
  if (!in_array($view->id(), ['my_calendar'])) {
    return;
  }

  foreach ($view->feedIcons as &$feed_icon) {
    $feed_icon['#theme'] = 'feed_icon__download';
  }
}

/**
 * Implements hook_ENTITY_TYPE_access().
 */
function events_vote_type_access(EntityInterface $entity, $operation, AccountInterface $account) {
  /** @var \Drupal\menu_item_visibility_by_group\MenuItemVisibilityCheckByGroup $check_by_group */
  $check_by_group = \Drupal::service('menu_item_visibility_by_group.check_by_group');
  if ($check_by_group->check($account, ['governance_area']) && 'view' == $operation) {
    return AccessResult::allowed();
  }

  return AccessResult::neutral();
}

/**
 * Implements hook_views_plugins_display_alter().
 */
function events_views_plugins_display_alter(array &$plugins) {
  if(isset($plugins['data_export'])){
    $data_export = &$plugins['data_export'];
    $data_export['class'] = 'Drupal\events\Custom\views\display\DataExport';
  }
}