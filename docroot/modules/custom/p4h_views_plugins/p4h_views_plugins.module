<?php

/**
 * @file
 * Contains p4h_views_plugins.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Form\FormStateInterface;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_theme().
 */
function p4h_views_plugins_theme() {
  \Drupal::moduleHandler()
    ->loadInclude('p4h_views_plugins', 'inc', 'p4h_views_plugins.theme');
  return [
    'p4h_views_plugins' => [
      'file' => 'p4h_views_plugins.theme.inc',
      'template' => 'p4h_views_plugins',
      'variables' => [
        'tags' => [],
        'options' => [],
        'quantity' => 9,
        'element' => 0,
        'parameters' => []
      ],
    ],
  ];
}

/**
 * Implements hook_entity_base_field_info().
 */
function p4h_views_plugins_entity_base_field_info(EntityTypeInterface $entity_type) {
  if (in_array($entity_type->id(), ['node', 'group'])) {
    $fields['computed_date'] = BaseFieldDefinition::create('integer')
      ->setLabel(t('Computed date'))
      ->setDescription(t('Computed date'));

    return $fields;
  }
}

/**
 * Implements hook_views_pre_build().
 */
function p4h_views_plugins_views_pre_build(ViewExecutable $view) {
  if (!in_array($view->id(), ['news_events'])) {
    return;
  }

  if (in_array($view->current_display, ['block_frontpage'])) {
    $account = \Drupal::currentUser();

    // Let front "recent news" list work as "my news" for authenticated users.
    if ($account->isAuthenticated()) {
      $view->setArguments([$account->id()]);
      $view->display_handler->setOption('title', t('My news'));
    }
    // Otherwise - show all public items.
    else {
      $view->setArguments([]);
      unset($view->filter['global_content']);
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function p4h_views_plugins_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // TODO Remove this bebebe restrict.
  if ($form_id == 'views_exposed_form') {
    switch ($form['#id']) {
      case 'views-exposed-form-news-events-block-1':
      case 'views-exposed-form-news-events-block-2':
      case 'views-exposed-form-news-events-block-3':
        if (!empty($form['type'])) {
          $form['type']['#access'] = Drupal::currentUser()->isAuthenticated();
          unset($form['type']['#options']['All']);

          $form['type']['#attributes']['data-accordion'] = 'none';
          $form['wrap-top'] = [
            '#prefix' => '<div class="wrapper-filters">',
            '#suffix' => '</div>',
            '#weight' => -200,
          ];
          $form['wrap-top']['type'] = $form['type'];

          unset($form['type']);
        }

      case 'views-exposed-form-news-and-events-group-news-and-events-by-group':
      case 'views-exposed-form-news-and-events-group-closed-news-and-events-by-group':
      case 'views-exposed-form-news-and-events-group-documents-by-group':
      case 'views-exposed-form-news-and-events-group-closed-documents-by-group':
      case 'views-exposed-form-news-and-events-group-region-news-events':
      case 'views-exposed-form-news-and-events-group-closed-region-news-events':
      case 'views-exposed-form-news-and-events-group-ga-news-events':
      case 'views-exposed-form-news-and-events-group-block-news-events-project':
      case 'views-exposed-form-news-and-events-group-closed-collaboration-news-events':
      case 'views-exposed-form-my-calendar-governance-area':
      case 'views-exposed-form-my-calendar-block-1':
        $form['wrap'] = [
          '#prefix' => '<div class="wrapper-filters">',
          '#suffix' => '</div>',
          '#weight' => -100,
        ];
        $form['#attributes']['data-accordion'] = $form['#id'];

        if (in_array($form['#id'], [
          'views-exposed-form-my-calendar-governance-area',
          'views-exposed-form-my-calendar-block-1',
        ])) {
          $form['month'] = [
            '#type' => 'hidden',
            '#default_value' => date('n'),
          ];
          $form['year'] = [
            '#type' => 'hidden',
            '#default_value' => date('Y'),
          ];
          $form['wrap']['format'] = [
            '#type' => 'hidden',
            '#default_value' => 'month',
          ];
          $form['#attached']['library'][] = 'events/fullcalendar.settings';

        }
        $form['wrap']['year'] = $form['year'];
        $form['wrap']['month'] = $form['month'];

        unset($form['year'], $form['month']);

        break;

      case 'views-exposed-form-list-of-projects-block-full':
      case 'views-exposed-form-list-of-projects-ga-block-full':
      case 'views-exposed-form-list-of-projects-region-full-block':
      case 'views-exposed-form-list-of-projects-closed-region-full-block':
      case 'views-exposed-form-my-projects-block-my-projects':
      case 'views-exposed-form-search-for-a-country-or-region-projects':
        $form['wrap'] = [
          '#prefix' => '<div class="wrapper-filters">',
          '#suffix' => '</div>',
          '#weight' => -100,
        ];
        $form['wrap']['actions'] = $form['actions'];
        unset($form['actions']);
        $form['wrap']['label'] = $form['label'];
        unset($form['label']);
        $form['wrap']['label']['#attributes']['placeholder'] = t('Search in collaborations');
        $form['#attributes']['data-accordion'] = $form['#id'];

        $form['wrap']['label']['#prefix'] = '<div class="search-form-wrapper">';
        $form['wrap']['actions']['#suffix'] = '</div>';
        break;

      case 'views-exposed-form-search-for-a-country-or-region-block-2':
        $form['combine_1']['#attributes']['placeholder'] = t('Search in countries');
        break;

      case 'views-exposed-form-search-for-a-country-or-region-products':
        $form['label']['#attributes']['placeholder'] = t('Search in products');

        $form['label']['#prefix'] = '<div class="search-form-wrapper">';
        $form['actions']['#suffix'] = '</div>';
        break;

      case 'views-exposed-form-knowledge-vault-kv-all':
        $form['label']['#attributes']['placeholder'] = t('Search in category');

        $form['label']['#prefix'] = '<div class="search-form-wrapper">';
        $form['actions']['#suffix'] = '</div>';
        break;
    }

    // Set autocomplete attribute
    $form['#attributes']['autocomplete'] = 'off';
  }
}

/**
 * Implements hook_views_plugins_filter_alter().
 */
function p4h_views_plugins_views_plugins_filter_alter(array &$plugins) {
// Class DateSelect not exists.
//  $plugins['datetime']['class'] = 'Drupal\p4h_views_plugins\Plugin\views\filter\DateSelect';
  $plugins['combine']['class'] = 'Drupal\p4h_views_plugins\Plugin\views\filter\CustomCombine';
}

/**
 * Implements hook_better_exposed_filters_display_options_alter().
 */
function p4h_views_plugins_better_exposed_filters_display_options_alter(&$display_options, $filter) {
  if (is_a($filter, 'Drupal\p4h_views_plugins\Plugin\views\filter\CustomCombine')) {
    $display_options['bef_ul'] = t('Alphabet Filter');
  }
}

/**
 * Implements hook_entity_presave().
 */
function p4h_views_plugins_entity_presave(EntityInterface $entity) {
  if (in_array($entity->getEntityTypeId(), ['node', 'group'])) {
    /** @var \Drupal\p4h_views_plugins\ComputedDateManager $manager */
    $manager = \Drupal::service('plugin.manager.computed_date');
    $plugins = $manager->getDefinitions();

    if (in_array($entity->bundle(), array_keys($plugins))) {
      /** @var \Drupal\p4h_views_plugins\ComputedDateBase $plugin */
      $plugin = $manager->createInstance($entity->bundle(), ['entity' => $entity]);
      $plugin->updateValue();
    }
  }
}

/**
 * Implements hook_views_data_alter().
 */
function p4h_views_plugins_views_data_alter(array &$data) {
  $data['node_field_data']['computed_date']['filter']['id'] = 'computed_date';
  $data['group_field_data']['computed_date']['filter']['id'] = 'computed_date';
  $data['group_content_field_data']['gid']['filter']['id'] = 'group_index_gid';

  $data['group_content_field_data']['gid_sub_group'] = array(
    'real field' => 'gid',
    'filter' => array(
      'title' => t('Has group id (with depth)'),
      'id' => 'group_index_gid_subgroup',
    ),
  );

  $data['group_content_field_data']['gid_following'] = array(
    'real field' => 'gid',
    'filter' => array(
      'title' => t('Following group'),
      'id' => 'group_index_by_following',
    ),
  );

  $data['group_content_field_data']['gid_global'] = array(
    'real field' => 'gid',
    'filter' => array(
      'title' => t('Group with global content'),
      'id' => 'group_index_by_global',
    ),
  );

  $data['taxonomy_term_field_data']['combine_taxonomy_term'] = array(
    'real field' => 'tid',
    'filter' => array(
      'title' => t('Grouping taxonomy terms'),
      'id' => 'combine_taxonomy_term',
    ),
  );
}
