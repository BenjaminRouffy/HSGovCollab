<?php
/**
 * @file
 * Contains p4h_views_plugins.module.
 */
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme().
 */
function p4h_views_plugins_theme() {
  \Drupal::moduleHandler()
    ->loadInclude('p4h_views_plugins', 'inc', 'p4h_views_plugins.theme');
  return [
    'p4h_views_plugins' => [
      'file' => 'p4h_views_plugins.theme.inc',
      'template' => 'p4h_views_plugins',
      'variables' => [
        'tags' => [],
        'options' => [],
        'quantity' => 9,
        'element' => 0,
        'parameters' => []
      ],
    ],
  ];
}

/**
 * Implements hook_entity_base_field_info().
 */
function p4h_views_plugins_entity_base_field_info(EntityTypeInterface $entity_type) {
  if($entity_type->id() == 'node') {
    $fields['computed_date'] = BaseFieldDefinition::create('string')
      ->setLabel(t('Computed date'))
      ->setDescription(t('Computed date'))
      ->setDisplayOptions('view', array(
        'label' => 'above',
        'weight' => -5,
      ));
    return $fields;
  }
}

/**
 * Implements hook_form_alter().
 */
function p4h_views_plugins_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'views_exposed_form'
    && in_array($form['#id'], ['views-exposed-form-news-events-block-1', 'views-exposed-form-news-and-events-group-news-and-events-by-group'])
  ) {
    $form['wrap'] = [
      '#prefix' => '<div class="wrapper-filters">',
      '#suffix' => '</div>',
      '#weight' => -100,
    ];
    $form['wrap']['year'] = $form['year'];
    $form['wrap']['month'] = $form['month'];
    unset($form['year'], $form['month']);
    $form['#attached']['drupalSettings'] = ['defaultFormSelector' => '#' . $form['#id']];
  }
}

/**
 * Implements hook_views_plugins_filter_alter().
 */
function p4h_views_plugins_views_plugins_filter_alter(array &$plugins) {
  $plugins['datetime']['class'] = 'Drupal\p4h_views_plugins\Plugin\views\filter\DateSelect';
  $plugins['combine']['class'] = 'Drupal\p4h_views_plugins\Plugin\views\filter\CustomCombine';
}

/**
 * Implements hook_better_exposed_filters_display_options_alter().
 */
function p4h_views_plugins_better_exposed_filters_display_options_alter(&$display_options, $filter) {
  if (is_a($filter, 'Drupal\p4h_views_plugins\Plugin\views\filter\CustomCombine')) {
    $display_options['bef_ul'] = t('Alphabet Filter');
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function p4h_views_plugins_node_presave(Drupal\Core\Entity\EntityInterface $entity) {
  $manager = \Drupal::service('plugin.manager.computed_date');
  $plugins = $manager->getDefinitions($entity->bundle());
  if (in_array($entity->bundle(), array_keys($plugins))) {

    /* @var $plugin Drupal\p4h_views_plugins\ComputedDateInterface */
    $plugin = $manager->createInstance($entity->bundle(), ['entity' => $entity]);
    $plugin->setValue();

  }
}
